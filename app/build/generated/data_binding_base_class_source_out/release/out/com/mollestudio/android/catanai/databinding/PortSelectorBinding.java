// Generated by view binder compiler. Do not edit!
package com.mollestudio.android.catanai.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.mollestudio.android.catanai.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PortSelectorBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout bottomClick;

  @NonNull
  public final ConstraintLayout bottomLeftClick;

  @NonNull
  public final ConstraintLayout bottomRightClick;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final ConstraintLayout topClick;

  @NonNull
  public final ConstraintLayout topLeftClick;

  @NonNull
  public final ConstraintLayout topRightClick;

  private PortSelectorBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout bottomClick, @NonNull ConstraintLayout bottomLeftClick,
      @NonNull ConstraintLayout bottomRightClick, @NonNull ConstraintLayout constraintLayout,
      @NonNull ImageView imageView, @NonNull ConstraintLayout topClick,
      @NonNull ConstraintLayout topLeftClick, @NonNull ConstraintLayout topRightClick) {
    this.rootView = rootView;
    this.bottomClick = bottomClick;
    this.bottomLeftClick = bottomLeftClick;
    this.bottomRightClick = bottomRightClick;
    this.constraintLayout = constraintLayout;
    this.imageView = imageView;
    this.topClick = topClick;
    this.topLeftClick = topLeftClick;
    this.topRightClick = topRightClick;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PortSelectorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PortSelectorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.port_selector, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PortSelectorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomClick;
      ConstraintLayout bottomClick = rootView.findViewById(id);
      if (bottomClick == null) {
        break missingId;
      }

      id = R.id.bottomLeftClick;
      ConstraintLayout bottomLeftClick = rootView.findViewById(id);
      if (bottomLeftClick == null) {
        break missingId;
      }

      id = R.id.bottomRightClick;
      ConstraintLayout bottomRightClick = rootView.findViewById(id);
      if (bottomRightClick == null) {
        break missingId;
      }

      ConstraintLayout constraintLayout = (ConstraintLayout) rootView;

      id = R.id.imageView;
      ImageView imageView = rootView.findViewById(id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.topClick;
      ConstraintLayout topClick = rootView.findViewById(id);
      if (topClick == null) {
        break missingId;
      }

      id = R.id.topLeftClick;
      ConstraintLayout topLeftClick = rootView.findViewById(id);
      if (topLeftClick == null) {
        break missingId;
      }

      id = R.id.topRightClick;
      ConstraintLayout topRightClick = rootView.findViewById(id);
      if (topRightClick == null) {
        break missingId;
      }

      return new PortSelectorBinding((ConstraintLayout) rootView, bottomClick, bottomLeftClick,
          bottomRightClick, constraintLayout, imageView, topClick, topLeftClick, topRightClick);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
